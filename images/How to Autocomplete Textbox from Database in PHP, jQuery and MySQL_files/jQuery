// API callback
related_results_labels_thumbs({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935"},"updated":{"$t":"2016-10-23T01:42:21.304+05:30"},"category":[{"term":"CodeIgniter"},{"term":"php"},{"term":"Bootstrap"},{"term":"MySQL"},{"term":"html"},{"term":"css"},{"term":"jQuery"},{"term":"Bootstrap Customization"},{"term":"Reviews"},{"term":"CodeIgniter Database Tutorials"},{"term":"json"},{"term":"CodeIgniter Bootstrap"},{"term":"Mobiles"},{"term":"CodeIgniter Query"},{"term":"Navbar"},{"term":"AJAX"},{"term":"CodeIgniter Basics"},{"term":"Bootstrap Forms"},{"term":"CSS Buttons"},{"term":"Contact Form"},{"term":"File Upload"},{"term":"jQuery Plugin"},{"term":"Conversions"},{"term":"Image Effects"},{"term":"JavaScript"},{"term":"Laptops"},{"term":"Social Media Icons"},{"term":"Bootstrap Basics"},{"term":"Bootstrap Buttons"},{"term":"CodeIgniter Tutorials"},{"term":"Database Joins"},{"term":"Font Awesome"},{"term":"HTML Form"},{"term":"June 2016"},{"term":"codeigniter Forms"},{"term":"jQuery UI"},{"term":"API"},{"term":"Arrays"},{"term":"Autocomplete Textbox"},{"term":"Bootstrap Custom CSS"},{"term":"Bootstrap Jumbotron"},{"term":"CRUD"},{"term":"CSV"},{"term":"CodeIgniter File Upload"},{"term":"Gaming Laptops"},{"term":"Insert JSON to MySQL in PHP"},{"term":"JSON to MySQL"},{"term":"July 2016"},{"term":"Menus"},{"term":"PHP Insert JSON into MySQL"},{"term":"Pagination"},{"term":"Popover"},{"term":"Registration Form"},{"term":"SMTP"},{"term":"Scraper"},{"term":"Send Email"},{"term":"XML"},{"term":"htaccess"},{"term":"Apache"},{"term":"Best Laptops under 25000"},{"term":"Best Laptops under 30000"},{"term":"Best Laptops under 40000"},{"term":"Best Laptops under 50000"},{"term":"Best List"},{"term":"BlueHost"},{"term":"Bootstrap CSS Classes"},{"term":"Bootstrap Carousel"},{"term":"Bootstrap Example"},{"term":"Bootstrap Images"},{"term":"Bootstrap Modals"},{"term":"CI Version"},{"term":"CMS"},{"term":"CSS Property"},{"term":"CSV to JSON"},{"term":"CSV to MySQL"},{"term":"Charts"},{"term":"CodeIgniter Bootstrap Login"},{"term":"CodeIgniter Delete Database"},{"term":"CodeIgniter Sessions"},{"term":"CodeIgniter Update Database"},{"term":"DOM Parser"},{"term":"Delete in CodeIgniter"},{"term":"Dropdown"},{"term":"Glyphicons"},{"term":"Google Charts"},{"term":"IP Address"},{"term":"Image Gallery"},{"term":"Insert in CodeIgniter"},{"term":"Lightbox Effect"},{"term":"Login"},{"term":"Login Form"},{"term":"Mobiles Under 12000"},{"term":"Modal Form"},{"term":"Multidimensional Arrays"},{"term":"MySQL to CSV"},{"term":"MySQL to JSON"},{"term":"PDF"},{"term":"PHP Hosting"},{"term":"Registration"},{"term":"Rewrite URL"},{"term":"Software"},{"term":"Tables"},{"term":"Text Effects"},{"term":"Update in CodeIgniter"},{"term":"Validation"},{"term":"Web Crawler"},{"term":"Web Hosting"},{"term":"bootstrap Search"},{"term":"email"},{"term":"menu bar"}],"title":{"type":"text","$t":"KodingMadeSimple"},"subtitle":{"type":"html","$t":"Koding Made Simple is a Programming Blog focussed on providing quality web design and web development tutorials on PHP, CodeIgniter, Bootstrap, jQuery and MySQL, HTML5, CSS3 Tutorials, Demos and Code Snippets."},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/-\/jQuery?alt=json-in-script\u0026max-results=6"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/search\/label\/jQuery"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/-\/jQuery\/-\/jQuery?alt=json-in-script\u0026start-index=7\u0026max-results=6"}],"author":[{"name":{"$t":"Valli Pandy"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"21"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"6"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-6339896642242389181"},"published":{"$t":"2016-10-03T19:01:00.003+05:30"},"updated":{"$t":"2016-10-03T19:01:39.168+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Bootstrap"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Bootstrap Basics"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Popover"}],"title":{"type":"text","$t":"Bootstrap Popover Form Example"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003E\u003Cem\u003EBootstrap Popover Form Example:\u003C\/em\u003E This post explains about inserting html form into bootstrap popover.  \u003Cstrong\u003EBootstrap popover plug-in\u003C\/strong\u003E is a small overlay used to show some additional content in a webpage.  You can place plain text, image, YouTube videos or other \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/12\/bootstrap-popover-example-with-html-on-hover.html\"\u003Ehtml inside bootstrap popover\u003C\/a\u003E.\u003C\/p\u003E \u003Cp\u003ENormally you have to rely on JavaScript to invoke and to place content inside popover.  But what if you want to insert an html form inside popover? There is a good workaround to do it and here is the method to place form within bootstrap popover.\u003C\/p\u003E \u003Ch2\u003EBootstrap Popover Form Example:\u003C\/h2\u003E \u003Cp\u003EFirst we'll need a button element to show popover when clicked.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;button id=\"subscribe\" type=\"button\" class=\"btn btn-lg btn-default\" data-toggle=\"popover\"\u0026gt;Subscribe\u0026lt;\/button\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThen add markup for a form of your choice and wrap it inside a \u003Ccode\u003E\u0026lt;div\u0026gt;\u003C\/code\u003E container to be placed inside popover.  Also you have to keep it hidden and should be invoked via javascript.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;div id=\"popover-form\" class=\"hide\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;form id=\"myform\" class=\"form-inline\" role=\"form\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;div class=\"form-group\"\u0026gt;\u003Cbr \/\u003E        \u0026lt;input id=\"email\" type=\"email\" placeholder=\"Enter Email-ID\" class=\"form-control\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E    \u0026lt;button type=\"submit\" class=\"btn btn-warning\"\u0026gt;Subscribe\u0026lt;\/button\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/form\u0026gt;\u003Cbr \/\u003E\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENow everything is in place.  All we have to do is to invoke the popover element using \u003Ccode\u003Epopover()\u003C\/code\u003E method.  And here is the jquery snippet for that.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$(\"#subscribe\").popover({\u003Cbr \/\u003E    title: '\u0026lt;h4\u0026gt;Newsletter Subscription\u0026lt;\/h4\u0026gt;',\u003Cbr \/\u003E    container: 'body',\u003Cbr \/\u003E    placement: 'bottom',\u003Cbr \/\u003E    html: true, \u003Cbr \/\u003E    content: function(){\u003Cbr \/\u003E          return $('#popover-form').html();\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThat's it.  Open the webpage in browser and click on the \u003Cstrong\u003E'Subscribe'\u003C\/strong\u003E button.  A popover will hang out at its bottom with a form inside.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"bootstrap-popover-form-example-submit\" border=\"0\" src=\"https:\/\/4.bp.blogspot.com\/-LPmhAVMYgAc\/V-6aKPV1GcI\/AAAAAAAABb0\/ZqPZuxmoNY8QU7S9ih42ZikGGpkBMddFACLcB\/s1600\/bootstrap-popover-form-example-submit.png\" title=\"Bootstrap Popover Form Example\" \/\u003E\u003C\/div\u003E \u003Cp\u003ENote that I have increased popover's width to make the form elements ('email' input \u0026 'subscribe' button) to stay in a single line.\u003C\/p\u003E \u003Cp\u003EAnd here's the css style for extending the width,\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E.popover {\u003Cbr \/\u003E    width: 304px;\u003Cbr \/\u003E    max-width: 100%;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EAlso I have used javascript to set all popover options.  But alternatively you can use \u003Ccode\u003Edata-\u003C\/code\u003E attributes to set them inside the button element like this,\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;button id=\"subscribe\" type=\"button\" class=\"btn btn-lg btn-default\" data-toggle=\"popover\" data-placement=\"bottom\" data-title=\"Newsletter Subscriptio\" data-container=\"body\" data-html=\"true\"\u0026gt;Subscribe\u0026lt;\/button\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EHere is the complete page created for the demo.\u003C\/p\u003E \u003Ch3\u003Eindex.html\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;!DOCTYPE html\u0026gt;\u003Cbr \/\u003E\u0026lt;html\u0026gt;\u003Cbr \/\u003E\u0026lt;head\u0026gt;\u003Cbr \/\u003E    \u0026lt;meta charset=\"utf-8\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;title\u0026gt;Bootstrap Popover Form Example\u0026lt;\/title\u0026gt;\u003Cbr \/\u003E    \u0026lt;link href=\"css\/bootstrap.css\" rel=\"stylesheet\" type=\"text\/css\" \/\u0026gt;\u003Cbr \/\u003E    \u0026lt;style type=\"text\/css\"\u0026gt;\u003Cbr \/\u003E    .popover {\u003Cbr \/\u003E        width: 304px;\u003Cbr \/\u003E        max-width: 100%;\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u0026lt;\/style\u0026gt;\u003Cbr \/\u003E\u0026lt;\/head\u0026gt;\u003Cbr \/\u003E\u0026lt;body\u0026gt;\u003Cbr \/\u003E\u0026lt;div class=\"container\" style=\"margin-top: 20px;\"\u0026gt;\u003Cbr \/\u003E\u0026lt;div class=\"row\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;div class=\"col-md-12 text-center well\"\u0026gt;\u003Cbr \/\u003E        \u0026lt;button id=\"subscribe\" type=\"button\" class=\"btn btn-lg btn-default\" data-toggle=\"popover\"\u0026gt;Subscribe\u0026lt;\/button\u0026gt;\u003Cbr \/\u003E        \u0026lt;div id=\"popover-form\" class=\"hide\"\u0026gt;\u003Cbr \/\u003E            \u0026lt;form id=\"myform\" class=\"form-inline\" role=\"form\"\u0026gt;\u003Cbr \/\u003E            \u0026lt;div class=\"form-group\"\u0026gt;\u003Cbr \/\u003E                \u0026lt;input id=\"email\" type=\"email\" placeholder=\"Enter Email-ID\" class=\"form-control\" \/\u0026gt;\u003Cbr \/\u003E            \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E            \u0026lt;button type=\"submit\" class=\"btn btn-warning\"\u0026gt;Subscribe\u0026lt;\/button\u0026gt;\u003Cbr \/\u003E            \u0026lt;\/form\u0026gt;\u003Cbr \/\u003E        \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;script src=\"js\/jquery-1.10.2.js\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\"js\/bootstrap.js\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$(\"#subscribe\").popover({\u003Cbr \/\u003E    title: '\u0026lt;h4\u0026gt;Newsletter Subscription\u0026lt;\/h4\u0026gt;',\u003Cbr \/\u003E    container: 'body',\u003Cbr \/\u003E    placement: 'bottom',\u003Cbr \/\u003E    html: true, \u003Cbr \/\u003E    content: function() {\u003Cbr \/\u003E          return $('#popover-form').html();\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;\/body\u0026gt;\u003Cbr \/\u003E\u0026lt;\/html\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Cstrong\u003EAlso Read:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2016\/08\/bootstrap-search-form-example-with-dropdown.html\"\u003EBootstrap Search Form with Dropdown Example\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003ESo that explains about bootstrap popover with form.  I hope you find this bootstrap tutorial useful.  Meet you in another interesting post.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/6339896642242389181\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/10\/bootstrap-popover-form-example.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/6339896642242389181"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/6339896642242389181"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/10\/bootstrap-popover-form-example.html","title":"Bootstrap Popover Form Example"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-LPmhAVMYgAc\/V-6aKPV1GcI\/AAAAAAAABb0\/ZqPZuxmoNY8QU7S9ih42ZikGGpkBMddFACLcB\/s72-c\/bootstrap-popover-form-example-submit.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-9188866390877923753"},"published":{"$t":"2016-09-29T20:07:00.001+05:30"},"updated":{"$t":"2016-09-29T20:07:52.990+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CRUD"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"},{"scheme":"http://www.blogger.com/atom/ns#","term":"MySQL"},{"scheme":"http://www.blogger.com/atom/ns#","term":"php"}],"title":{"type":"text","$t":"Delete Multiple Records with Checkbox in PHP \u0026 MySQL"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003EHi! This time I have come up with a php tutorial that demonstrates about \u003Cstrong\u003Edeleting multiple records with checkbox using PHP \u0026 MySQL database.\u003C\/strong\u003E  Under CRUD management, we should provide option for deleting multiple rows from database as deleting records one by one would be time consuming.  Also it is recommended to ask for user confirmation before deleting records to avoid accidental clicks.  Here we'll see how to implement this multiple delete in php and mysql.\u003C\/p\u003E \u003Ch2\u003EDelete Multiple Records in PHP MySQL using Checkbox:\u003C\/h2\u003E \u003Cp\u003EAs for the demo goes, we have to create a user interface with an html table displaying all user records from the database along with a checkbox on each row.  The user has to tick the checkbox to pick on the rows to delete and click on the 'Delete' button provided underneath the table.\u003C\/p\u003E \u003Cp\u003EJust to improve user experience we also have to give an \u003Cu\u003Eoption for the user to select all checkboxes at once\u003C\/u\u003E by checking on the checkbox placed on the header column of the table.  Then we have to show a popup to confirm user action and once user acknowledges it, we have to delete all the selected records and refresh the users table and show some sort of notification.\u003C\/p\u003E \u003Ch2\u003ECreate Database:\u003C\/h2\u003E \u003Cp\u003EHere is the mysql database we'd need for the demo.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003ECREATE DATABASE `db_demo`;\u003Cbr \/\u003EUse `db_demo`;\u003Cbr \/\u003E\u003Cbr \/\u003ECREATE TABLE IF NOT EXISTS `users` (\u003Cbr \/\u003E  `id` int(11) NOT NULL AUTO_INCREMENT,\u003Cbr \/\u003E  `fname` varchar(30) NOT NULL,\u003Cbr \/\u003E  `lname` varchar(30) NOT NULL,\u003Cbr \/\u003E  `email` varchar(60) NOT NULL,\u003Cbr \/\u003E  `city` varchar(50) NOT NULL,\u003Cbr \/\u003E  PRIMARY KEY (`id`)\u003Cbr \/\u003E) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=6;\u003Cbr \/\u003E\u003Cbr \/\u003EINSERT INTO `users` (`id`, `fname`, `lname`, `email`, `city`) VALUES\u003Cbr \/\u003E(1, 'Jim', 'Connor', 'jimconnor@yahoo.com', 'Las Vegas'),\u003Cbr \/\u003E(2, 'Taylor', 'Fox', 'taylorfox@hotmail.com', 'San Francisco'),\u003Cbr \/\u003E(3, 'Daniel', 'Greyson', 'danielgreyson@hotmail.com', 'New York'),\u003Cbr \/\u003E(4, 'Julia', 'Brown', 'juliabrown@gmail.com', 'Los Angeles'),\u003Cbr \/\u003E(5, 'Rose', 'Harris', 'roseharris@gmail.com', 'New York');\u003Cbr \/\u003E\u003C\/pre\u003E \u003Ch2\u003EHTML \u0026 PHP Code:\u003C\/h2\u003E \u003Cp\u003EHere is the index.php file which contains the user interface we have discussed earlier and php code to delete multiple records from database.\u003C\/p\u003E \u003Ch3\u003Eindex.php\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;?php\u003Cbr \/\u003E\/\/ mysql connection\u003Cbr \/\u003E$hostname = \"localhost\";\u003Cbr \/\u003E$username = \"root\";\u003Cbr \/\u003E$password = \"\";\u003Cbr \/\u003E$dbname = \"db_demo\";\u003Cbr \/\u003E\u003Cbr \/\u003E$con = mysqli_connect($hostname, $username, $password, $dbname) or die(\"Error: \" . mysqli_error($con));\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ fetch records\u003Cbr \/\u003E$result = @mysqli_query($con, \"SELECT * FROM users\") or die(\"Error: \" . mysqli_error($con));\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ delete records\u003Cbr \/\u003Eif(isset($_POST['chk_id']))\u003Cbr \/\u003E{\u003Cbr \/\u003E    $arr = $_POST['chk_id'];\u003Cbr \/\u003E    foreach ($arr as $id) {\u003Cbr \/\u003E        @mysqli_query($con,\"DELETE FROM users WHERE id = \" . $id);\u003Cbr \/\u003E    }\u003Cbr \/\u003E    $msg = \"Deleted Successfully!\";\u003Cbr \/\u003E    header(\"Location: index.php?msg=$msg\");\u003Cbr \/\u003E}\u003Cbr \/\u003E?\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;!DOCTYPE html\u0026gt;\u003Cbr \/\u003E\u0026lt;html\u0026gt;\u003Cbr \/\u003E\u0026lt;head\u0026gt;\u003Cbr \/\u003E    \u0026lt;title\u0026gt;Delete Multiple Rows Using PHP \u0026 MySQL\u0026lt;\/title\u0026gt;\u003Cbr \/\u003E    \u0026lt;meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" \u0026gt;\u003Cbr \/\u003E    \u0026lt;link rel=\"stylesheet\" href=\"css\/bootstrap.css\" type=\"text\/css\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/head\u0026gt;\u003Cbr \/\u003E\u0026lt;body\u0026gt;\u003Cbr \/\u003E\u0026lt;div class=\"container\" style=\"margin-top: 20px;\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;div class=\"row\"\u0026gt;\u003Cbr \/\u003E        \u0026lt;div class=\"col-md-8 col-md-offset-2\"\u0026gt;\u003Cbr \/\u003E            \u0026lt;form action=\"index.php\" method=\"post\"\u0026gt;\u003Cbr \/\u003E            \u0026lt;?php if (isset($_GET['msg'])) { ?\u0026gt;\u003Cbr \/\u003E            \u0026lt;p class=\"alert alert-success\"\u0026gt;\u0026lt;?php echo $_GET['msg']; ?\u0026gt;\u0026lt;\/p\u0026gt;\u003Cbr \/\u003E            \u0026lt;?php } ?\u0026gt;\u003Cbr \/\u003E            \u0026lt;table class=\"table table-striped table-hover\"\u0026gt;\u003Cbr \/\u003E                \u0026lt;thead\u0026gt;\u003Cbr \/\u003E                    \u0026lt;tr\u0026gt;\u003Cbr \/\u003E                    \u0026lt;th\u0026gt;\u0026lt;input id=\"chk_all\" name=\"chk_all\" type=\"checkbox\"  \/\u0026gt;\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E                    \u0026lt;th\u0026gt;First Name\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E                    \u0026lt;th\u0026gt;Last Name\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E                    \u0026lt;th\u0026gt;Email ID\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E                    \u0026lt;th\u0026gt;City\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E                    \u0026lt;\/tr\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/thead\u0026gt;\u003Cbr \/\u003E                \u0026lt;tbody\u0026gt;\u003Cbr \/\u003E                \u0026lt;?php while($row = mysqli_fetch_assoc($result)) { ?\u0026gt;\u003Cbr \/\u003E                \u0026lt;tr\u0026gt;\u003Cbr \/\u003E                    \u0026lt;td\u0026gt;\u0026lt;input name=\"chk_id[]\" type=\"checkbox\" class='chkbox' value=\"\u0026lt;?php echo $row['id']; ?\u0026gt;\"\/\u0026gt;\u0026lt;\/td\u0026gt;\u003Cbr \/\u003E                    \u0026lt;td\u0026gt;\u0026lt;?php echo $row['fname']; ?\u0026gt;\u0026lt;\/td\u0026gt;\u003Cbr \/\u003E                    \u0026lt;td\u0026gt;\u0026lt;?php echo $row['lname']; ?\u0026gt;\u0026lt;\/td\u0026gt;\u003Cbr \/\u003E                    \u0026lt;td\u0026gt;\u0026lt;?php echo $row['email']; ?\u0026gt;\u0026lt;\/td\u0026gt;\u003Cbr \/\u003E                    \u0026lt;td\u0026gt;\u0026lt;?php echo $row['city']; ?\u0026gt;\u0026lt;\/td\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/tr\u0026gt;\u003Cbr \/\u003E                \u0026lt;?php } ?\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/tbody\u0026gt;\u003Cbr \/\u003E            \u0026lt;\/table\u0026gt;\u003Cbr \/\u003E            \u0026lt;input id=\"submit\" name=\"submit\" type=\"submit\" class=\"btn btn-danger\" value=\"Delete Selected Row(s)\" \/\u0026gt;\u003Cbr \/\u003E            \u0026lt;\/form\u0026gt;\u003Cbr \/\u003E        \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\"js\/jquery-1.10.2.js\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$(document).ready(function(){\u003Cbr \/\u003E    $('#chk_all').click(function(){\u003Cbr \/\u003E        if(this.checked)\u003Cbr \/\u003E            $(\".chkbox\").prop(\"checked\", true);\u003Cbr \/\u003E        else\u003Cbr \/\u003E            $(\".chkbox\").prop(\"checked\", false);\u003Cbr \/\u003E    });\u003Cbr \/\u003E});\u003Cbr \/\u003E\u003Cbr \/\u003E$(document).ready(function(){\u003Cbr \/\u003E    $('#delete_form').submit(function(e){\u003Cbr \/\u003E        if(!confirm(\"Confirm Delete?\")){\u003Cbr \/\u003E            e.preventDefault();\u003Cbr \/\u003E        }\u003Cbr \/\u003E    });\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;\/body\u0026gt;\u003Cbr \/\u003E\u0026lt;\/html\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EWe have used two jquery functions in our code, the first one \u003Ccode\u003E$('#chk_all').click()\u003C\/code\u003E - which is triggered when the user check\/uncheck the header column checkbox \u003Ccode\u003Echk-all\u003C\/code\u003E.  It selects\/deselects all the checkboxes based up the checked status of 'chk_all' checkbox.\u003C\/p\u003E \u003Cp\u003EAnd the next jquery function \u003Ccode\u003E$('#delete_form').submit()\u003C\/code\u003E will be fired when the user click on the \u003Ccode\u003E#submit\u003C\/code\u003E button which \u003Cu\u003Epops up a confirmation alert\u003C\/u\u003E and submits the form only when user clicks \u003Ccode\u003EOK\u003C\/code\u003E button.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"php-confirmation-box-before-delete-jquery\" border=\"0\" src=\"https:\/\/4.bp.blogspot.com\/-d8QvX7snqwM\/V-wgw_PyB5I\/AAAAAAAABbk\/0442bXxk304yvcFDmr6-wCt9SeybsTTKgCLcB\/s1600\/php-confirmation-box-before-delete-jquery.png\" title=\"PHP MySQL - Confirm Delete\" \/\u003E\u003C\/div\u003E \u003Cp\u003EOnce the records are deleted the page will be refreshed with the remaining set of user records and a success notification will be displayed on the page.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"delete-multiple-records-in-php-mysql-using-checkbox\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-sh1q8ebcIJk\/V-wgwv8QE3I\/AAAAAAAABbg\/4SsRLZ2xc1M4ZYYn4ZCpjmLjcr57cpU_ACLcB\/s1600\/delete-multiple-records-in-php-mysql-using-checkbox.png\" title=\"Multiple Delete in PHP \u0026amp; MySQL\" \/\u003E\u003C\/div\u003E \u003Cp\u003EThis demo uses procedural approach but if you want to do it with PHP PDO, then check for \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/08\/delete-data-from-mysql-with-confirmation-message-in-php.html\"\u003Ethis tutorial\u003C\/a\u003E.\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003ERead Also:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2016\/09\/live-username-availability-check-in-php-ajax-jquery.html\"\u003ELive Username Availability Check Using PHP \u0026 AJAX\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003EDon't Miss:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/07\/import-csv-file-into-mysql-database-php-script.html\"\u003EHow to Import CSV into MySQL Database Using PHP\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003EThat explains about \u003Cem\u003Ehow to delete multiple records with checkbox in php and mysql database.\u003C\/em\u003E  You can customize the code to suit your need.  Meet you in another interesting tutorial.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/9188866390877923753\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/09\/delete-multiple-records-with-checkbox-php-mysql.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/9188866390877923753"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/9188866390877923753"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/09\/delete-multiple-records-with-checkbox-php-mysql.html","title":"Delete Multiple Records with Checkbox in PHP \u0026 MySQL"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-d8QvX7snqwM\/V-wgw_PyB5I\/AAAAAAAABbk\/0442bXxk304yvcFDmr6-wCt9SeybsTTKgCLcB\/s72-c\/php-confirmation-box-before-delete-jquery.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-482591319440748621"},"published":{"$t":"2016-09-22T20:21:00.000+05:30"},"updated":{"$t":"2016-09-22T20:21:17.945+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"AJAX"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"},{"scheme":"http://www.blogger.com/atom/ns#","term":"MySQL"},{"scheme":"http://www.blogger.com/atom/ns#","term":"php"}],"title":{"type":"text","$t":"Live Username Availability Check in PHP, AJAX \u0026 jQuery"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003EHi! Here I'm going to show you about \u003Cstrong\u003Elive username availability check in php and jquery ajax\u003C\/strong\u003E.  I don't have to mention how much Signup process means for a website and two main entity required for it is, username and password.  Moreover this username should be unique and it's important to \u003Cem\u003Echeck if the username already exists in database or not\u003C\/em\u003E at the time of registration.  Performing this username availability check live would be smart and can be accomplished using php and jquery ajax request.\u003C\/p\u003E \u003Ch2\u003ELive Username Availability Check in PHP \u0026 jQuery AJAX:\u003C\/h2\u003E \u003Cp\u003EDuring user signup, we have to determine if the username entered is already been taken or not.  So the idea is to let users type in the username and once they move on to the next field, we send \u003Ca href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/AJAX\/Getting_Started\" target=\"_blank\" rel=\"nofollow\"\u003EAJAX request\u003C\/a\u003E to a backend php script where it checks against the database if username is already present or not and returns appropriate result.\u003C\/p\u003E \u003Cp\u003EAlso we have to keep the submit button under disabled state and make it active only when the chosen username is unique and not yet registered.  Here goes the implementation for the live username availability check.\u003C\/p\u003E \u003Ch2\u003ECreate MySQL Database:\u003C\/h2\u003E \u003Cp\u003EThis is the mysql database we'd need for checking username availability.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003ECREATE DATABASE `db_demo`;\u003Cbr \/\u003EUse `db_demo`;\u003Cbr \/\u003E\u003Cbr \/\u003ECREATE TABLE IF NOT EXISTS `tbl_users` (\u003Cbr \/\u003E  `id` int(9) NOT NULL AUTO_INCREMENT,\u003Cbr \/\u003E  `username` varchar(30) NOT NULL,\u003Cbr \/\u003E  `email` varchar(60) NOT NULL,\u003Cbr \/\u003E  PRIMARY KEY (`id`),\u003Cbr \/\u003E  UNIQUE KEY `email` (`email`)\u003Cbr \/\u003E) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4;\u003Cbr \/\u003E\u003Cbr \/\u003EINSERT INTO `tbl_users` (`id`, `username`, `email`) VALUES\u003Cbr \/\u003E(1, 'foxadmin', 'foxadmin@example.com'),\u003Cbr \/\u003E(2, 'george26', 'georgefoxus@gmail.com'),\u003Cbr \/\u003E(3, 'userjack', 'jack.jil@outlook.com');\u003Cbr \/\u003E\u003C\/pre\u003E \u003Ch2\u003EHTML \u0026 jQuery AJAX Script:\u003C\/h2\u003E \u003Cp\u003EThis one is the user interface page.  It contains an html form with two input fields for username \u0026 email-id and a submit button.  The submit button would be kept disabled by default and activated only when the username entered by the user is available to take.\u003C\/p\u003E \u003Ch3\u003Eindex.html\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;!DOCTYPE html\u0026gt;\u003Cbr \/\u003E\u0026lt;html\u0026gt;\u003Cbr \/\u003E\u0026lt;head\u0026gt;\u003Cbr \/\u003E    \u0026lt;title\u0026gt;Live Check for Username Availability Using PHP \u0026 jQuery AJAX | Demo\u0026lt;\/title\u0026gt;\u003Cbr \/\u003E    \u0026lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;link href=\"css\/bootstrap.min.css\" rel=\"stylesheet\" type=\"text\/css\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/head\u0026gt;\u003Cbr \/\u003E\u0026lt;body\u0026gt;\u003Cbr \/\u003E\u0026lt;div class=\"container\" style=\"margin-top: 20px;\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;div class=\"row\"\u0026gt;\u003Cbr \/\u003E        \u0026lt;div class=\"col-xs-4 col-xs-offset-4\"\u0026gt;\u003Cbr \/\u003E            \u0026lt;form action=\"check_username.php\" method=\"post\"\u0026gt;\u003Cbr \/\u003E                \u0026lt;legend\u0026gt;Check Username Availabilty:\u0026lt;\/legend\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E                \u0026lt;div class=\"form-group\"\u0026gt;\u003Cbr \/\u003E                    \u0026lt;input type=\"text\" id=\"username\" placeholder=\"Enter username\" class=\"form-control\" \/\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E                \u0026lt;div id=\"msg\" class=\"form-group\"\u0026gt;\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E                \u0026lt;div class=\"form-group\"\u0026gt;\u003Cbr \/\u003E                    \u0026lt;input type=\"text\" id=\"email\" placeholder=\"Email ID\" class=\"form-control\" \/\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E                \u0026lt;div class=\"form-group\"\u0026gt;\u003Cbr \/\u003E                    \u0026lt;input type=\"submit\" id=\"submit\" value=\"submit\" disabled class=\"btn btn-block btn-primary\" \/\u0026gt;\u003Cbr \/\u003E                \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E            \u0026lt;\/form\u0026gt;\u003Cbr \/\u003E        \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u0026lt;\/div\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;script src=\"js\/jquery-1.10.2.js\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$(document).ready(function() {\u003Cbr \/\u003E$(\"#username\").blur(function(e) {\u003Cbr \/\u003E    var uname = $(this).val();\u003Cbr \/\u003E    if (uname == \"\")\u003Cbr \/\u003E    {\u003Cbr \/\u003E        $(\"#msg\").html(\"\");\u003Cbr \/\u003E        $(\"#submit\").attr(\"disabled\", true);\u003Cbr \/\u003E    }\u003Cbr \/\u003E    else\u003Cbr \/\u003E    {\u003Cbr \/\u003E        $(\"#msg\").html(\"checking...\");\u003Cbr \/\u003E        $.ajax({\u003Cbr \/\u003E            url: \"check_username.php\",\u003Cbr \/\u003E            data: {username: uname},\u003Cbr \/\u003E            type: \"POST\",\u003Cbr \/\u003E            success: function(data) {\u003Cbr \/\u003E                if(data \u0026gt; '0') {\u003Cbr \/\u003E                    $(\"#msg\").html('\u0026lt;span class=\"text-danger\"\u0026gt;Username is already taken!\u0026lt;\/span\u0026gt;');\u003Cbr \/\u003E                    $(\"#submit\").attr(\"disabled\", true);\u003Cbr \/\u003E                } else {\u003Cbr \/\u003E                    $(\"#msg\").html('\u0026lt;span class=\"text-success\"\u0026gt;Username is available!\u0026lt;\/span\u0026gt;');\u003Cbr \/\u003E                    $(\"#submit\").attr(\"disabled\", false);\u003Cbr \/\u003E                }\u003Cbr \/\u003E            }\u003Cbr \/\u003E        });\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;\/body\u0026gt;\u003Cbr \/\u003E\u0026lt;\/html\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EAs you can see above, we have used jQuery's \u003Ccode\u003Eajax()\u003C\/code\u003E function to send ajax request to backend.  The \u003Cstrong\u003E'url'\u003C\/strong\u003E param of this function is something similar to the form action attribute and contains the php filename where the HTTP request is to be sent.  And the param \u003Cstrong\u003E'data'\u003C\/strong\u003E contains the form data as json string and sent along with the request.\u003C\/p\u003E \u003Cp\u003EThen there's the \u003Cstrong\u003E'success'\u003C\/strong\u003E function which gets executed when there is valid response.  It gets the response from the php script and notifies user if username is taken or not.\u003C\/p\u003E \u003Ch2\u003EPHP Script:\u003C\/h2\u003E \u003Cp\u003EThis script connects to the mysql database and fires a query to determine if there is any matching entry for the username and returns the result to the AJAX function.\u003C\/p\u003E \u003Ch3\u003Echeck_username.php\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;?php\u003Cbr \/\u003E\/\/ mysql connection\u003Cbr \/\u003E$host = \"localhost\";\u003Cbr \/\u003E$user = \"username1\";\u003Cbr \/\u003E$pass = \"password1\";\u003Cbr \/\u003E$db = \"db_demo\";\u003Cbr \/\u003E$con = mysqli_connect($host, $user, $pass, $db) or die(\"Error \" . mysqli_error($con));\u003Cbr \/\u003E\u003Cbr \/\u003Eif (isset($_POST[\"username\"]))\u003Cbr \/\u003E{\u003Cbr \/\u003E    $username = mysqli_real_escape_string($con, $_POST[\"username\"]);\u003Cbr \/\u003E    $sql = \"select username from tbl_users where username='$username'\";\u003Cbr \/\u003E    $result = mysqli_query($con, $sql);\u003Cbr \/\u003E    echo mysqli_num_rows($result);\u003Cbr \/\u003E}\u003Cbr \/\u003E?\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThat's it.  We have everything in place.  Now run index.html file and type something for username and shift focus from the field.  This will trigger the ajax call and the script informs if username is available or not.  If the username you have entered is not yet registered then you will see message like this.  And the submit button would be enabled.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"live-username-availability-check-in-php-jquery-ajax\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-gLycEPyK9u8\/V-LWORZgcmI\/AAAAAAAABbA\/mmVUQqemuPkdcCtsE5Y0r6nNyJ48KV9hACLcB\/s1600\/live-username-availability-check-in-php-jquery-ajax.png\" title=\"Live Username Availability Check\" \/\u003E\u003C\/div\u003E \u003Cp\u003EOn the other hand if username is already taken then error message is shown and the submit button continues to be in disabled state.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"check-if-username-already-exists-in-php-ajax\" border=\"0\" src=\"https:\/\/1.bp.blogspot.com\/-G6-c6_pkRrs\/V-LWOLkGKpI\/AAAAAAAABa8\/TFuSAWVNvkse4nLlu1HcMbf5AqnAGca8gCLcB\/s1600\/check-if-username-already-exists-in-php-ajax.png\" title=\"Check Username Availability\" \/\u003E\u003C\/div\u003E \u003Cp\u003EIn this demo I have used \u003Ccode\u003Eblur()\u003C\/code\u003E method to trigger ajax call however you can use \u003Ccode\u003Echange()\u003C\/code\u003E or \u003Ccode\u003Ekeyup()\u003C\/code\u003E - but please be aware this would increase server load.  So your best bet is to set some timer and send ajax request only when certain amount of time elapsed after user stoped typing.\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003EAlso Read:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/12\/php-search-engine-script-for-mysql-database-ajax.html\"\u003ELive Search Engine Script using PHP, MySQL \u0026 AJAX\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003EDon't Miss:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2016\/01\/php-login-and-registration-script-with-mysql-example.html\"\u003EPHP and MySQL User Login and Registration Script\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003ESo that explains about live username availability check using php and jquery ajax.  You can customize the above code to better suit your requirement.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/482591319440748621\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/09\/live-username-availability-check-in-php-ajax-jquery.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/482591319440748621"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/482591319440748621"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/09\/live-username-availability-check-in-php-ajax-jquery.html","title":"Live Username Availability Check in PHP, AJAX \u0026 jQuery"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-gLycEPyK9u8\/V-LWORZgcmI\/AAAAAAAABbA\/mmVUQqemuPkdcCtsE5Y0r6nNyJ48KV9hACLcB\/s72-c\/live-username-availability-check-in-php-jquery-ajax.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-4179943201413801207"},"published":{"$t":"2016-08-18T19:58:00.002+05:30"},"updated":{"$t":"2016-08-18T19:58:58.494+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"AJAX"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CodeIgniter"},{"scheme":"http://www.blogger.com/atom/ns#","term":"codeigniter Forms"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"}],"title":{"type":"text","$t":"How to Submit Form using AJAX in CodeIgniter"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003EHi! This post will show you \u003Cstrong\u003Ehow to submit form using ajax in codeigniter.\u003C\/strong\u003E  Generally when you submit html forms - page will be refreshed.  But jQuery's ajax() method makes it possible to submit form, post and receive data without refreshing the page.  Yep! A cool feature and so many modern websites use this technique to send \u0026 receive asynchronous HTTP request.  And here we'll see how to use ajax in code igniter for form submission.\u003C\/p\u003E \u003Ch2\u003ECodeIgniter Submit Form using AJAX Example:\u003C\/h2\u003E \u003Cp\u003ELet's create a demo to submit form using ajax in codeigniter.  As for this demo, consider you have a user subscription form with an input box for \u003Cstrong\u003E'email id'\u003C\/strong\u003E and a \u003Cstrong\u003E'subscribe'\u003C\/strong\u003E button - this is the form which you want to submit using ajax.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"submit-form-using-ajax-in-codeigniter-example\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-byiU8axiNnw\/V7SmtZsA7GI\/AAAAAAAABXk\/iRx8khAljKYq8umww3uqBJUVl6v_aJgiQCLcB\/s1600\/submit-form-using-ajax-in-codeigniter-example.png\" title=\"CodeIgniter Submit Form using AJAX\" \/\u003E\u003C\/div\u003E \u003Cp\u003EFirst we'll need to create a controller for the demo and this would be it.\u003C\/p\u003E \u003Ch3\u003EController: \"ajax_demo.php\"\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;?php\u003Cbr \/\u003Eclass ajax_demo extends CI_Controller\u003Cbr \/\u003E{\u003Cbr \/\u003E    public function __construct()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        parent::__construct();\u003Cbr \/\u003E        $this-\u0026gt;load-\u0026gt;helper(array('form','url'));\u003Cbr \/\u003E        $this-\u0026gt;load-\u0026gt;library('form_validation');\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cbr \/\u003E    \/\/ load codeigniter view\u003Cbr \/\u003E    function index(){\u003Cbr \/\u003E        $this-\u0026gt;load-\u0026gt;view(\"ajax_demo_view\");\u003Cbr \/\u003E    }\u003Cbr \/\u003E    \u003Cbr \/\u003E    \/\/ fn to which form 'll be submitted via ajax\u003Cbr \/\u003E    function submit()\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \/\/set validation rule\u003Cbr \/\u003E        $this-\u0026gt;form_validation-\u0026gt;set_rules('email', 'Email', 'trim|required|valid_email);\u003Cbr \/\u003E        \u003Cbr \/\u003E        if ($this-\u0026gt;form_validation-\u0026gt;run() == FALSE)\u003Cbr \/\u003E        {   \u003Cbr \/\u003E            \/\/validation fails\u003Cbr \/\u003E            echo validation_errors();\u003Cbr \/\u003E        }\u003Cbr \/\u003E        else\u003Cbr \/\u003E        {\u003Cbr \/\u003E            \/\/ get post data\u003Cbr \/\u003E            $emailid = $this-\u0026gt;input-\u0026gt;post('email');\u003Cbr \/\u003E            \u003Cbr \/\u003E            \/\/ write your database insert code here\u003Cbr \/\u003E            ...\u003Cbr \/\u003E            \u003Cbr \/\u003E            echo \"\u0026lt;div class='alert'\u0026gt;Thanks for Subscribing! Please stay tuned to get awesome tips...\u0026lt;\/div\u0026gt;\";\u003Cbr \/\u003E        }\u003Cbr \/\u003E    }\u003Cbr \/\u003E?\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENext we have to create view for the controller and add a form \u0026 other necessary elements. Then you should include jquery library and add js snippet which will collect the form data (in our case it's just email id) and submit the form via jquery's \u003Ccode\u003Eajax()\u003C\/code\u003E method.\u003C\/p\u003E \u003Ch3\u003EView: \"ajax_demo_view.php\"\u003C\/h3\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;html\u0026gt;\u003Cbr \/\u003E    \u0026lt;head\u0026gt;\u003Cbr \/\u003E        \u0026lt;title\u0026gt;Codeigniter AJAX form Submission Demo\u0026lt;\/title\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/head\u0026gt;\u003Cbr \/\u003E    \u0026lt;body\u0026gt;\u003Cbr \/\u003E        ...\u003Cbr \/\u003E        \u003Cbr \/\u003E        \u0026lt;script src=\"\u0026lt;?php echo base_url(\"\/path\/to\/jquery-1.10.2.js\"); ?\u0026gt;\" type=\"text\/javascript\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E        \u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E        $(\"#submit\").click(function(e) {\u003Cbr \/\u003E            e.preventDefault();\u003Cbr \/\u003E            var email_id = $(\"email\").val();\u003Cbr \/\u003E            $.ajax({\u003Cbr \/\u003E                url: \"\u0026lt;?php echo site_url('ajax_demo\/submit'); ?\u0026gt;\",\u003Cbr \/\u003E                method: \"POST\",\u003Cbr \/\u003E                data: {email: email_id},\u003Cbr \/\u003E                success: function(data) {\u003Cbr \/\u003E                    $(\"#message\").html(data);\u003Cbr \/\u003E                },\u003Cbr \/\u003E                error: function() {\u003Cbr \/\u003E                    alert(\"Please enter valid email id!\");\u003Cbr \/\u003E                }\u003Cbr \/\u003E            });\u003Cbr \/\u003E        });\u003Cbr \/\u003E        \u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003Cbr \/\u003E    \u0026lt;\/body\u0026gt;\u003Cbr \/\u003E\u0026lt;\/html\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EIn the above code, \u003Ccode\u003E#submit\u003C\/code\u003E specifies the id of the subscribe button and when it is clicked by user, the javascript will be executed and then form data will be submitted using ajax() without refreshing the page.\u003C\/p\u003E \u003Cp\u003E\u003Ccode\u003EjQuery's ajax()\u003C\/code\u003E function contains several options and we have used some of them in our example.  Here are the descriptions for what those options stands for.\u003C\/p\u003E \u003Cul\u003E\u003Cli\u003E\u003Cstrong\u003Eurl\u003C\/strong\u003E - contains the URL to which the HTTP request is sent. (in our example, ajax_demo is the controller name and submit is the function to which we submit the form.)\u003C\/li\u003E\u003Cli\u003E\u003Cstrong\u003Emethod\u003C\/strong\u003E - specifies if the request is GET or POST.\u003C\/li\u003E\u003Cli\u003E\u003Cstrong\u003Edata\u003C\/strong\u003E - contains the form data as json format.  It can either be a string or object.\u003C\/li\u003E\u003Cli\u003E\u003Cstrong\u003Esuccess\u003C\/strong\u003E - this function will be executed when the http request succeeds.\u003C\/li\u003E\u003Cli\u003E\u003Cstrong\u003Eerror\u003C\/strong\u003E - and this function will be invoked if the http request fails.\u003C\/li\u003E\u003C\/ul\u003E \u003Cp\u003ESubmitting codeigniter form using ajax would be similar to submitting it with normal submit button.  The only difference would be, that you have to load jquery library in codeigniter view and use it's ajax() or post() method to submit the form without refreshing the page.  Like any other form, it will be submitted to the controller function and you have to specify it with URL option.\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003ERelated Read:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/09\/codeigniter-modal-contact-form-jquery-ajax-validation-example.html\"\u003ECodeIgniter AJAX Form Example with Validation\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003E\u003Cem\u003ESo that explains how to submit form using ajax in codeigniter.\u003C\/em\u003E  I hope you find post this useful.  Stay tuned for more interesting coding tutorials \u0026 tips.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/4179943201413801207\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/08\/submit-form-using-ajax-in-codeigniter.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/4179943201413801207"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/4179943201413801207"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/08\/submit-form-using-ajax-in-codeigniter.html","title":"How to Submit Form using AJAX in CodeIgniter"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-byiU8axiNnw\/V7SmtZsA7GI\/AAAAAAAABXk\/iRx8khAljKYq8umww3uqBJUVl6v_aJgiQCLcB\/s72-c\/submit-form-using-ajax-in-codeigniter-example.png","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-6874707892866853869"},"published":{"$t":"2016-08-12T19:38:00.002+05:30"},"updated":{"$t":"2016-08-12T19:38:52.704+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CodeIgniter"},{"scheme":"http://www.blogger.com/atom/ns#","term":"codeigniter Forms"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery Plugin"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery UI"}],"title":{"type":"text","$t":"How to Use Datepicker in Codeigniter using jQuery | Example"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003EThis tutorial will show you \u003Cstrong\u003Ehow to use datepicker in codeigniter forms using jquery.\u003C\/strong\u003E  A date picker is an interactive control which makes it easy for the user to choose the date from a calendar rather typing it manually.  Honestly who wants to type into web forms let alone date these days? Besides it's a great way to avoid typos and enhance user experience too.\u003C\/p\u003E \u003Cp\u003EThere are so many ways by which you can add datepicker in codeigniter, but jquery ui datepicker so far is simple and rich in features.  This datepicker calendar will be tied to form input and opened in a small overlay beneath the text box.  Below we'll see \u003Cem\u003Ehow to use datepicker in codeigniter with jquery ui plug-in.\u003C\/em\u003E\u003C\/p\u003E \u003Ch2\u003EHow to Add Datepicker in CodeIgniter using jQuery UI?\u003C\/h2\u003E \u003Cp\u003ETo use jquery datepicker in codeigniter form, first you'll need to download \u003Ca href=\"https:\/\/jqueryui.com\/download\/all\/\" target=\"_blank\" rel=\"nofollow\"\u003EjQuery UI plugin\u003C\/a\u003E and move the files to your codeigniter application.  Make sure to place them along with your other assets like css, js for easier access.\u003C\/p\u003E \u003Cp\u003ENext you have to include the plug-in's css and js files to codeigniter view.  Since the plugin is built over jquery you'll also need to include the library for the datepicker to work.\u003C\/p\u003E \u003Cp\u003ESo include jquery ui style sheet inside \u003Ccode\u003E\u0026lt;head\u0026gt;\u0026lt;\/head\u0026gt;\u003C\/code\u003E of your code igniter view.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;head\u0026gt;\u003Cbr \/\u003E    ...\u003Cbr \/\u003E    \u0026lt;!--link jquery ui css--\u0026gt;\u003Cbr \/\u003E    \u0026lt;link type=\"text\/css\" rel=\"stylesheet\" href=\"\u0026lt;?php echo base_url('assets\/jquery-ui-1.12.0\/jquery-ui.css'); ?\u0026gt;\" \/\u0026gt;\u003Cbr \/\u003E\u0026lt;\/head\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENext load jquery and jquery ui's js files just above the closing body tag (\u0026lt;\/body\u0026gt;).\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;!--load jquery--\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\"\u0026lt;?php echo base_url('assets\/js\/jquery-1.10.2.js'); ?\u0026gt;\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u0026lt;!--load jquery ui js file--\u0026gt;\u003Cbr \/\u003E\u0026lt;script src=\"\u0026lt;?php echo base_url('assets\/jquery-ui-1.12.0\/jquery-ui.js'); ?\u0026gt;\"\u0026gt;\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENow create a text input to codeigniter form to which you can add datepicker control.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;label for=\"dob\"\u0026gt;Date of Birth\u0026lt;\/label\u0026gt;\u003Cbr \/\u003E\u0026lt;?php $attributes = 'id=\"dob\" placeholder=\"Date of Birth\"';\u003Cbr \/\u003Eecho form_input('dob', set_value('dob'), $attributes); ?\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EHere is the final step to add datepicker in codeigniter.  Add this script just above the \u003Ccode\u003E\u0026lt;\/body\u0026gt;\u003C\/code\u003E tag.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$(function() {\u003Cbr \/\u003E    $(\"#dob\").datepicker();\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe function \u003Ccode\u003Edatepicker()\u003C\/code\u003E is used to invoke the month calendar - and the above script makes the datepicker calendar to popup as soon as the dob field got focus.\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"add-jquery-datepicker-in-codeigniter-example\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-7qIJb0JYJKw\/V6zJ5saO9jI\/AAAAAAAABXE\/SBlvG3mX72IHHly15bosBamJTb_WG3IvgCLcB\/s1600\/add-jquery-datepicker-in-codeigniter-example.png\" title=\"Datepicker in Codeigniter Example\" \/\u003E\u003C\/div\u003E \u003Cp\u003EYou can also customize the way the datepicker control behaves using its options.  For example its default date format is 'mm\/dd\/yy'.  If you want to change it to the common date format used in databases then set \u003Ccode\u003EdateFormat\u003C\/code\u003E option inside datepicker() like this,\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-php codebk\"\u003E\u003Cbr \/\u003E$(\"#dob\").datepicker(\u003Cbr \/\u003E    {\u003Cbr \/\u003E        dateFormat: 'yy-mm-dd'\u003Cbr \/\u003E    }\u003Cbr \/\u003E);\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThis setting will be helpful in case you wish to insert the date input to database.  It will save you the additional computing time required to change the date format and store it into db.\u003C\/p\u003E \u003Cp\u003E\u003Cstrong\u003ERead Also:\u003C\/strong\u003E \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2016\/08\/codeigniter-populate-dropdown-from-database-example.html\"\u003EHow to Populate Dropdown from Database in CodeIgniter\u003C\/a\u003E\u003C\/p\u003E \u003Cp\u003ELikewise you can easily use datepicker in codeigniter forms using jQuery ui plugin.  I hope you find this little codeigniter tutorial useful.  Meet you in another interesting post.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/6874707892866853869\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/08\/how-to-use-datepicker-in-codeigniter-jquery-example.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/6874707892866853869"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/6874707892866853869"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/08\/how-to-use-datepicker-in-codeigniter-jquery-example.html","title":"How to Use Datepicker in Codeigniter using jQuery | Example"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-7qIJb0JYJKw\/V6zJ5saO9jI\/AAAAAAAABXE\/SBlvG3mX72IHHly15bosBamJTb_WG3IvgCLcB\/s72-c\/add-jquery-datepicker-in-codeigniter-example.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-4505192626920795935.post-301832136156141120"},"published":{"$t":"2016-07-13T18:56:00.002+05:30"},"updated":{"$t":"2016-09-12T20:08:46.884+05:30"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"html"},{"scheme":"http://www.blogger.com/atom/ns#","term":"jQuery"},{"scheme":"http://www.blogger.com/atom/ns#","term":"json"}],"title":{"type":"text","$t":"Display JSON Data in HTML Table using jQuery and AJAX"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E \u003Cp\u003EHi! This post will show you \u003Cstrong\u003Ehow to display json data in html table using jquery and ajax\u003C\/strong\u003E call.  As you know, JSON format is widely used across platforms and languages and with AJAX you can send and receive HTTP requests asynchronously between client and server.  \u003Ca href=\"http:\/\/www.kodingmadesimple.com\/2015\/07\/convert-json-data-html-table-jquery-datatables-plugin.html\"\u003EPopulating json data in html table using datatable plugin\u003C\/a\u003E has been discussed a while before and this time we'll do it without involving any third-party plug-in - just with jQuery and AJAX itself.\u003C\/p\u003E \u003Ch2\u003EDisplay JSON Data in HTML Table using jQuery \u0026 AJAX:\u003C\/h2\u003E \u003Cp\u003ELet's take a json file containing multiple dataset and make ajax request to display json data in html table.  And we need to use jquery's \u003Ccode\u003Eajax()\u003C\/code\u003E method to send http request.\u003C\/p\u003E \u003Ch2\u003EJSON File: data.json\u003C\/h2\u003E \u003Cpre class=\"prettyprint codebk\"\u003E\u003Cbr \/\u003E[\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"01262\",    \u003Cbr \/\u003E        \"city\": \"Stockbridge\",\u003Cbr \/\u003E        \"county\": \"Berkshire\"\u003Cbr \/\u003E    },\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"02881\",\u003Cbr \/\u003E        \"city\": \"Kingston\",\u003Cbr \/\u003E        \"county\": \"Washington\"\u003Cbr \/\u003E    },\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"03470\",\u003Cbr \/\u003E        \"city\": \"Winchester\",\u003Cbr \/\u003E        \"county\": \"Cheshire\"\u003Cbr \/\u003E    },\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"14477\",\u003Cbr \/\u003E        \"city\": \"Kent\",\u003Cbr \/\u003E        \"county\": \"Orleans\"\u003Cbr \/\u003E    },\u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"28652\",\u003Cbr \/\u003E        \"city\": \"Minneapolis\",\u003Cbr \/\u003E        \"county\": \"Avery\"\u003Cbr \/\u003E    },    \u003Cbr \/\u003E    {\u003Cbr \/\u003E        \"zipcode\": \"98101\",\u003Cbr \/\u003E        \"city\": \"Seattle\",\u003Cbr \/\u003E        \"county\": \"King\"\u003Cbr \/\u003E    }\u003Cbr \/\u003E]\u003Cbr \/\u003E\u003C\/pre\u003E \u003Ch2\u003ECreate HTML Table Placeholder:\u003C\/h2\u003E \u003Cp\u003EIn order to \u003Cstrong\u003Epopulate html table with json data\u003C\/strong\u003E, we are going to need an html table placeholder.  Later we'll make use of this placeholder in ajax() method to display the json received from the server.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-html codebk\"\u003E\u003Cbr \/\u003E\u0026lt;table id=\"myTable\"\u0026gt;\u003Cbr \/\u003E    \u0026lt;tr\u0026gt;\u003Cbr \/\u003E        \u0026lt;th\u0026gt;Zipcode\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E        \u0026lt;th\u0026gt;City\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E        \u0026lt;th\u0026gt;County\u0026lt;\/th\u0026gt;\u003Cbr \/\u003E    \u0026lt;\/tr\u0026gt;\u003Cbr \/\u003E\u0026lt;\/table\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Ch2\u003EAdd Some CSS Styling:\u003C\/h2\u003E \u003Cpre class=\"prettyprint lang-css codebk\"\u003E\u003Cbr \/\u003E\u0026lt;style\u0026gt;\u003Cbr \/\u003Etable {\u003Cbr \/\u003E    width: 50%;\u003Cbr \/\u003E}\u003Cbr \/\u003Eth {\u003Cbr \/\u003E    background: #f1f1f1;\u003Cbr \/\u003E    font-weight: bold;\u003Cbr \/\u003E    padding: 6px;\u003Cbr \/\u003E}\u003Cbr \/\u003Etd {\u003Cbr \/\u003E    background: #f9f9f9;\u003Cbr \/\u003E    padding: 6px;\u003Cbr \/\u003E}\u003Cbr \/\u003E\u0026lt;\/style\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Ch2\u003EMake AJAX Call to Populate HTML Table with JSON Data:\u003C\/h2\u003E \u003Cp\u003EAnd this is the jquery script for making ajax call to receive json data over HTTP communication.  The script basically sends HTTP request to get json from an url and then parse the received json \u0026 display it in the html table we have created in the above step.\u003C\/p\u003E \u003Cpre class=\"prettyprint lang-js codebk\"\u003E\u003Cbr \/\u003E\u0026lt;script type=\"text\/javascript\"\u0026gt;\u003Cbr \/\u003E$.ajax({\u003Cbr \/\u003E    url: 'data.json',\u003Cbr \/\u003E    dataType: 'json',\u003Cbr \/\u003E    success: function(data) {\u003Cbr \/\u003E        for (var i=0; i\u0026lt;data.length; i++) {\u003Cbr \/\u003E            var row = $('\u0026lt;tr\u0026gt;\u0026lt;td\u0026gt;' + data[i].zipcode+ '\u0026lt;\/td\u0026gt;\u0026lt;td\u0026gt;' + data[i].city + '\u0026lt;\/td\u0026gt;\u0026lt;td\u0026gt;' + data[i].county + '\u0026lt;\/td\u0026gt;\u0026lt;\/tr\u0026gt;');\u003Cbr \/\u003E            $('#myTable').append(row);\u003Cbr \/\u003E        }\u003Cbr \/\u003E    },\u003Cbr \/\u003E    error: function(jqXHR, textStatus, errorThrown){\u003Cbr \/\u003E        alert('Error: ' + textStatus + ' - ' + errorThrown);\u003Cbr \/\u003E    }\u003Cbr \/\u003E});\u003Cbr \/\u003E\u0026lt;\/script\u0026gt;\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe jquery ajax() method makes asynchronous communication between the client and server over HTTP.\u003C\/p\u003E \u003Cp\u003EIts \u003Cstrong\u003EURL\u003C\/strong\u003E parameter specifies the url to which the HTTP request should be sent.  In our example it is the path to the json file.\u003C\/p\u003E \u003Cp\u003EThe \u003Cstrong\u003EdataType\u003C\/strong\u003E is the expected datatype of the server response.\u003C\/p\u003E \u003Cp\u003EThe \u003Cstrong\u003Esuccess\u003C\/strong\u003E parameter contains the function to be called once the AJAX request is successfully completed.\u003C\/p\u003E \u003Cp\u003EAnd the \u003Cstrong\u003Eerror\u003C\/strong\u003E parameter contains the function to be executed when the server request fails.\u003C\/p\u003E \u003Cp\u003EIf everything goes right, the above script populates 'myTable' HTML table with json data like this,\u003C\/p\u003E \u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cimg alt=\"display-json-data-in-html-table-using-jquery-ajax\" border=\"0\" src=\"https:\/\/3.bp.blogspot.com\/-zHqPoKcXe-8\/V4Y_eLy78bI\/AAAAAAAABTY\/Lyvj2a1O878-b1N73lvIMMlmeSH37sx5wCLcB\/s1600\/display-json-data-in-html-table-jquery-ajax.png\" title=\"Populate HTML Table with JSON Data\" \/\u003E\u003C\/div\u003E \u003Cp\u003ELikewise you can \u003Cem\u003Edisplay json data in html table using jquery and ajax\u003C\/em\u003E.  Please let me know your queries if any via comments.\u003C\/p\u003E \u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.kodingmadesimple.com\/feeds\/301832136156141120\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/07\/display-json-data-in-html-table-using-jquery-ajax.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/301832136156141120"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4505192626920795935\/posts\/default\/301832136156141120"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.kodingmadesimple.com\/2016\/07\/display-json-data-in-html-table-using-jquery-ajax.html","title":"Display JSON Data in HTML Table using jQuery and AJAX"}],"author":[{"name":{"$t":"Valli Pandy"},"uri":{"$t":"https:\/\/plus.google.com\/118168225881121148199"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-ip2FW8N1Krc\/AAAAAAAAAAI\/AAAAAAAAANM\/AXTQABVHRAc\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-zHqPoKcXe-8\/V4Y_eLy78bI\/AAAAAAAABTY\/Lyvj2a1O878-b1N73lvIMMlmeSH37sx5wCLcB\/s72-c\/display-json-data-in-html-table-jquery-ajax.png","height":"72","width":"72"},"thr$total":{"$t":"1"}}]}});